from typing import Any, List, Optional

from pydantic import BaseModel


class Specs(BaseModel):
    active_safety_system_note: Any
    adaptive_cruise_control_acc: str
    adaptive_driving_beam_adb: Any
    anti_lock_braking_system_abs: str
    auto_reverse_system_for_windows_and_sunroofs: str
    automatic_crash_notification_acn_advanced_automatic_crash_notification_aacn: str
    automatic_pedestrian_alerting_sound_for_hybrid_and_ev_only: Any
    axle_configuration: Any
    axles: Any
    backup_camera: str
    base_price: Any
    battery_current_amps_from: Any
    battery_current_amps_to: Any
    battery_energy_kwh_from: Any
    battery_energy_kwh_to: Any
    battery_type: Any
    battery_voltage_volts_from: Any
    battery_voltage_volts_to: Any
    bed_length_inches: Any
    bed_type: Any
    blind_spot_intervention_bsi: Any
    blind_spot_warning_bsw: str
    body_class: str
    brake_system_description: Any
    brake_system_type: str
    bus_floor_configuration_type: str
    bus_length_feet: Any
    bus_type: str
    cab_type: Any
    charger_level: Any
    charger_power_kw: Any
    cooling_type: Any
    crash_imminent_braking_cib: str
    curb_weight_pounds: Any
    curtain_air_bag_locations: str
    custom_motorcycle_type: str
    daytime_running_light_drl: str
    destination_market: Any
    displacement_cc: str
    displacement_ci: str
    displacement_l: str
    doors: Any
    drive_type: str
    dynamic_brake_support_dbs: str
    electrification_level: Any
    electronic_stability_control_esc: str
    engine_brake_hp_from: Any
    engine_brake_hp_to: Any
    engine_configuration: Any
    engine_manufacturer: Any
    engine_model: str
    engine_number_of_cylinders: str
    engine_power_kw: Any
    engine_stroke_cycles: Any
    entertainment_system: Any
    ev_drive_unit: Any
    event_data_recorder_edr: str
    forward_collision_warning_fcw: str
    front_air_bag_locations: str
    fuel_delivery_fuel_injection_type: Any
    fuel_type_primary: str
    fuel_type_secondary: Any
    gross_combination_weight_rating_from: Any
    gross_combination_weight_rating_to: Any
    gross_vehicle_weight_rating_from: str
    gross_vehicle_weight_rating_to: Any
    headlamp_light_source: Any
    keyless_ignition: str
    knee_air_bag_locations: Any
    lane_centering_assistance: Any
    lane_departure_warning_ldw: str
    lane_keeping_assistance_lka: str
    manufacturer_name: str
    motorcycle_chassis_type: str
    motorcycle_suspension_type: str
    ncsa_body_type: str
    ncsa_make: str
    ncsa_model: str
    ncsa_note: Any
    non_land_use: Any
    note: Any
    number_of_battery_cells_per_module: Any
    number_of_battery_modules_per_pack: Any
    number_of_battery_packs_per_vehicle: Any
    number_of_seat_rows: Any
    number_of_seats: Any
    number_of_wheels: Any
    other_battery_info: Any
    other_bus_info: Any
    other_engine_info: str
    other_motorcycle_info: Any
    other_restraint_system_info: str
    other_trailer_info: Any
    parking_assist: str
    pedestrian_automatic_emergency_braking_paeb: str
    plant_city: str
    plant_company_name: Any
    plant_country: str
    plant_state: str
    possible_values: str
    pretensioner: Any
    rear_automatic_emergency_braking: str
    rear_cross_traffic_alert: str
    sae_automation_level_from: Any
    sae_automation_level_to: Any
    seat_belt_type: str
    seat_cushion_air_bag_locations: Any
    semiautomatic_headlamp_beam_switching: str
    series: str
    series2: Any
    side_air_bag_locations: str
    steering_location: Any
    suggested_vin: str
    tire_pressure_monitoring_system_tpms_type: str
    top_speed_mph: Any
    track_width_inches: Any
    traction_control: str
    trailer_body_type: str
    trailer_length_feet: Any
    trailer_type_connection: str
    transmission_speeds: Any
    transmission_style: Any
    trim: str
    trim2: Any
    turbo: Any
    valve_train_design: Any
    vehicle_descriptor: str
    vehicle_type: str
    wheel_base_inches_from: Any
    wheel_base_inches_to: Any
    wheel_base_type: Any
    wheel_size_front_inches: Any
    wheel_size_rear_inches: Any
    windows: Any


class VinInfo(BaseModel):
    year: int
    make: str
    model: str
    trim: str
    specs: Specs
    trims: List
    vin: str


